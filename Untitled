var funnel = ["PAGE_VIEWED", "BUYER_ADD_TO_CART", "USER_PERFORMED_ACTION", "SUCCESSFUL_ORDER"];

function main() {
  return Events({
    from_date: "2018-03-22",
    to_date: "2018-03-22"
  })
  // get the last step seen for each user
  .groupBy(
    ["properties.DEVICE_ID"],
    function([current_step], events) {
    if (current_step === undefined) { current_step = -1; }

    _.each(events, function(e) {
      if (e.name === funnel[current_step + 1]) {
        current_step++;
      }
    });
    return current_step;
  })
  // filter out users who did not enter the funnel
  .filter(function(item) { return item.value > -1 })
  // count the number of users who ended at each step
  .groupBy(
    [function(item) { return item.value }],
    mixpanel.reducer.count()
  )
  // do some math to add the step N users to the previous step(s)
  // this is converting us from "users who ended at each step"
  // into "users who were ever present at each step"
  .reduce(function(accumulators, steps) {
    var funnel_steps = Array(funnel.length);
    for (var i = 0; i < funnel_steps.length; i++) {
      funnel_steps[i] = 0;
    }
    _.each(steps, function(step) {
      // the group key was the step the user ended on
      var step_idx = step.key[0];
      // increment each previous step by the number of
      // users who ended at this step.
      while (step_idx > -1) {
        funnel_steps[step_idx] += step.value;
        step_idx--;
      }
    });
    // if there are a LOT of steps we might have
    // processed some of them previously, so we have
    // to add the previously processed counts together.
    _.each(accumulators, function(accumulator) {
      _.each(accumulator, function(step_count, i) {
        funnel_steps[i] += step_count;
      });
    });

    return funnel_steps;
  });
}
